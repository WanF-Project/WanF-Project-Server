spring:
  datasource:
    url: jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;MODE=MYSQL;NON_KEYWORDS=USER
    username: sa
    password: password
    driver-class-name: org.h2.Driver
  h2:
    console:
      enabled: true
  jpa:
    database-platform: org.hibernate.dialect.MySQL57Dialect
    show-sql: true
    properties:
      hibernate:
        format_sql: true
    hibernate:
      ddl-auto: update
    generate-ddl: true
  mail:
    default-encoding: UTF-8
    host: smtp.gmail.com
    port: 587
    username: google email
    password: google password
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
          ssl:
            trust: smtp.gmail.com
  kafka:
    producer:
      bootstrap-servers: localhost:9092
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    consumer:
      bootstrap-servers: localhost:9092
      group-id: wanf
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      properties:
        spring:
          json:
            trusted:
              packages: "*"
          deserializer:
            value:
              delegate:
                class: org.springframework.kafka.support.serializer.JsonDeserializer
logging:
  level:
    org.hibernate.SQL: debug

jwt:
  secret: ${JWT_SECRET_KEY}
  refresh-token-validity-in-seconds: 1209600 # 14일
  access-token-validity-in-seconds: 43200 # 12시간

cors:
  allowed-origins: "*"

cloud:
  aws:
    credentials:
      access-key: aws access key
      secret-key: aws secret key
    region:
      static: ap-northeast-2
    s3:
      bucket: wanf-bucket
    stack:
      auto: false


